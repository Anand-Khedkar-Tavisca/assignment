docker run --name private-service -p 8080:5000 private-service-package
docker run --name public-service -p 5000:5000 public-service-package


docker ecr repo login 
aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 435896812584.dkr.ecr.us-east-1.amazonaws.com; 

tag image with repo to get imnage id docker images
docker tag 72050ff599c4 435896812584.dkr.ecr.us-east-1.amazonaws.com/handsonpractice:tag

Push the image using the docker push command:
docker push aws_account_id.dkr.ecr.us-west-2.amazonaws.com/my-repository:tag
docker push 435896812584.dkr.ecr.us-east-1.amazonaws.com/handsonpractice:tag



Retrieve an authentication token and authenticate your Docker client to your registry.
Use the AWS CLI:

aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/t3o5y1z6
Note: If you receive an error using the AWS CLI, make sure that you have the latest version of the AWS CLI and Docker installed.
Build your Docker image using the following command. For information on building a Docker file from scratch see the instructions here . You can skip this step if your image is already built:

docker build -t public-service-package .
After the build completes, tag your image so you can push the image to this repository:

docker tag public-service-package:latest public.ecr.aws/t3o5y1z6/handsonpractice:3
Run the following command to push this image to your newly created AWS repository:

docker push public.ecr.aws/t3o5y1z6/handsonpractice:3
